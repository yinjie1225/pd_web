<template>
  <el-dialog
    :title="'Excel导入'"
    :close-on-click-modal="false"
    width="65%"
    :visible.sync="visible">
    <el-form :model="dataForm" :rules="dataRule" ref="dataForm" @keyup.enter.native="dataFormSubmit()" label-width="80px" :inline="true">
      <el-form-item label="业务名称" prop="businessname">
        <el-input v-model="dataForm.businessname" placeholder="业务名称" :disabled="true"></el-input>
      </el-form-item>
      <el-form-item label="业务ID" prop="businessid">
        <el-input v-model="dataForm.businessid" placeholder="业务ID" :disabled="true"></el-input>
      </el-form-item>
      <el-form-item label="操作员" prop="businessOperatorname">
        <el-input :value="userName" :disabled="true"></el-input>
      </el-form-item>
      <el-form-item label="录入方式" >
        <el-input type="text" value="Excel上传" :disabled="true"></el-input>
      </el-form-item>
      <el-form-item label="上传文件" >
        <span :disabled="true" style="display: inline-block;border: 1px solid #E4E7ED;width: 180px;height: 34px;border-radius: 4px; overflow:hidden;">{{fname}}</span>
      </el-form-item>
      <el-form-item>

        <el-upload class="upload-demo" :action="url" multiple :limit="1"  :file-list="fileList" :beforeUpload="beforeAvatarUpload">
          <el-button type="primary">点击上传</el-button>
        </el-upload>

      </el-form-item>
      <el-form-item>
        <el-button>模板下载</el-button>
      </el-form-item>
    </el-form>
    <span slot="footer" class="dialog-footer">
      <el-button @click="visible = false">取消</el-button>
      <el-button type="primary" @click="dataFormSubmit()">确定</el-button>
    </span>
  </el-dialog>
</template>

<script type="text/ecmascript-6">
  export default {
    data () {
      return {
        fname: '',
        fileList: [],
        url: '',
        dataForm: {
          businessname: '',
          businessid: '',
          businessstate: ''
        },
        visible: false,
        dataRule: {
          businessid: [
            {required: true, message: '业务ID不能为空', trigger: 'blur'}
          ],
          businessname: [
            {required: true, message: '业务名称不能为空', trigger: 'blur'}
          ],
          businessoperatorname: [
            { required: true, message: '操作员名称不能为空', trigger: 'blur' }
          ]
        }
      }
    },
    computed: {
      userName: {
        get () { return this.$store.state.user.name }
      }
    },
    methods: {
      beforeAvatarUpload (file) {
        console.log(file.name)
        this.fname = file.name
        var testmsg = file.name.substring(file.name.lastIndexOf('.') + 1)
        const extension = testmsg === 'xls'
        const extension2 = testmsg === 'xlsx'
        if (!extension && !extension2) {
          this.$message({
            message: '上传文件只能是 xls、xlsx格式!',
            type: 'warning'
          })
        }
        return extension || extension2
      },
      init (id) {
        this.dataForm.id = id || 0
        this.visible = true
        this.$nextTick(() => {
          this.$refs['dataForm'].resetFields()
          if (this.dataForm.id) {
            this.$http({
              url: this.$http.adornUrl(`/generator/tbprofitbusinessinfo/info/${this.dataForm.id}`),
              method: 'get',
              params: this.$http.adornParams()
            }).then(({data}) => {
              console.log(data)
              if (data && data.code === 0) {
                this.dataForm.businessid = data.tbProfitbusinessInfo.businessid
                this.dataForm.businessname = data.tbProfitbusinessInfo.businessname
                this.dataForm.businessdescribe = data.tbProfitbusinessInfo.businessdescribe
                this.dataForm.businessOperator = data.tbProfitbusinessInfo.businessOperator
                this.dataForm.businessoperatorname = data.tbProfitbusinessInfo.businessoperatorname
                this.dataForm.businesstype = data.tbProfitbusinessInfo.businesstype
                this.dataForm.businessstate = data.tbProfitbusinessInfo.businessstate
                this.dataForm.gmtCreate = data.tbProfitbusinessInfo.gmtCreate
                this.dataForm.gmtModified = data.tbProfitbusinessInfo.gmtModified
                this.dataForm.isState = data.tbProfitbusinessInfo.isState
                this.dataForm.isDelete = data.tbProfitbusinessInfo.isDelete
              }
            })
          }
        })
      },
      // 表单提交
      dataFormSubmit () {
        this.$refs['dataForm'].validate((valid) => {
          if (valid) {
            this.$http({
              url: this.$http.adornUrl(`/generator/tbprofitbusinessinfo/${!this.dataForm.id ? 'saveProfitbusiness' : 'updateBusinessDate'}`),
              method: 'post',
              data: this.$http.adornData({
                'id': this.dataForm.id || undefined,
                'userName': this.dataForm.userName,
                'businessID': this.dataForm.businessid,
                'businessname': this.dataForm.businessname,
                'businessdescribe': this.dataForm.businessdescribe,
                'businessOperator': this.dataForm.businessOperator,
                'businessOperatorName': this.userName,
                'businesstype': 2,
                'businessstate': this.dataForm.businessstate,
                'gmtCreate': this.dataForm.gmtCreate,
                'gmtModified': this.dataForm.gmtModified,
                'isState': 1,
                'isDelete': 2,
                'profitroleList': this.liList,
                'modifList': this.lists,
                'proRole': '公交云',
                'profitType': '9',
                'profitInput': '',
                'desc': this.dataForm.desc
              })
            }).then(({data}) => {
              console.log(this.lists)
              if (data && data.code === 0) {
                console.log(this.lists)
                this.$message({
                  message: '操作成功',
                  type: 'success',
                  duration: 1500,
                  onClose: () => {
                    this.visible = false
                    this.$emit('refreshDataList')
                  }
                })
              } else {
                this.$message.error(data.msg)
              }
            })
          }
        })
      }
    }
  }
</script>
