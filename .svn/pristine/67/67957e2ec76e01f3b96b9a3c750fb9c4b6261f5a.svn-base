<template>
  <el-dialog
    :title="'Excel导入'"
    :close-on-click-modal="false"
    width="65%"
    :visible.sync="visible">
    <el-form :model="dataForm" :rules="dataRule" ref="dataForm" @keyup.enter.native="dataFormSubmit()" label-width="80px" :inline="true">
      <el-form-item label="业务名称" prop="businessname">
        <el-input v-model="dataForm.businessname" placeholder="业务名称" :disabled="true"></el-input>
      </el-form-item>
      <el-form-item label="业务ID" prop="businessid">
        <el-input v-model="dataForm.businessid" placeholder="业务ID" :disabled="true"></el-input>
      </el-form-item>
      <el-form-item label="操作员" prop="businessOperatorname">
        <el-input :value="userName" :disabled="true"></el-input>
      </el-form-item>
      <el-form-item label="录入方式" >
        <el-input type="text" value="Excel上传" :disabled="true"></el-input>
      </el-form-item>
      <el-form-item>

        <el-upload class="upload-demo" ref="upload" :action='uploadURL' name="file" :headers="headers" :data="form[0]"
                   :onError="uploadError" :onSuccess="uploadSuccess" :beforeUpload="beforeAvatarUpload"
                   :file-list="fileList" :limit="1" :auto-upload="false">
          <el-button style="margin: 0;" slot="trigger" size="small" type="primary">选取文件</el-button>
          <el-button style="margin-left: 10px;" size="small" type="success" @click="submitUpload">上传到服务器</el-button>
          <div slot="tip" class="el-upload__tip">只能上传Excel文件</div>
        </el-upload>
      </el-form-item>
      <el-form-item>
        <a href="src/model-file/Excel.xlsx" download="Excel.xlsx">Excel导入模板下载</a>
      </el-form-item>
    </el-form>
    <span slot="footer" class="dialog-footer">
      <el-button @click="visible = false">取消</el-button>
      <el-button type="primary" @click="dataFormSubmit()">确定</el-button>
    </span>
  </el-dialog>
</template>

<script type="text/ecmascript-6">
  import Vue from 'vue'
  export default {
    data () {
      return {
        uploadURL: 'http://192.168.1.9:8080/fr-service/generator/advertisementexcel/importexceldate',
        headers: {
          'token': Vue.cookie.get('token')
        },
        form: [],
        fileList: [],
        dataForm: {
          businessname: '',
          businessid: '',
          businessstate: ''
        },
        visible: false,
        dataRule: {
          businessid: [
            {required: true, message: '业务ID不能为空', trigger: 'blur'}
          ],
          businessname: [
            {required: true, message: '业务名称不能为空', trigger: 'blur'}
          ],
          businessoperatorname: [
            { required: true, message: '操作员名称不能为空', trigger: 'blur' }
          ]
        }
      }
    },
    computed: {
      userName: {
        get () { return this.$store.state.user.name }
      }
    },
    methods: {
      uploadSuccess: function (response, file, fileList) {
        console.log('上传文件', response)
        // alert('上传文件成功', response)
      },
      // 上传错误
      uploadError: function (response, file, fileList) {
        alert('上传失败，请重试！')
      },
      // 上传前对文件的大小的判断
      beforeAvatarUpload: function (file) {
        var extension = file.name.split('.')[1] === 'xls'
        var extension2 = file.name.split('.')[1] === 'xlsx'
        const isLt2M = file.size / 1024 / 1024 < 5
        if (!extension && !extension2) {
          alert('上传模板只能是 xls、xlsx、doc、docx 格式!')
        }
        if (!isLt2M) {
          alert('上传模板大小不能超过 5MB!')
        }
        return (extension || extension2) && isLt2M
      },
      submitUpload: function () {
        this.$refs.upload.submit()
      },
      init (id) {
        this.dataForm.id = id || 0
        this.visible = true
        this.$nextTick(() => {
          this.$refs['dataForm'].resetFields()
          if (this.dataForm.id) {
            this.$http({
              url: this.$http.adornUrl(`/generator/tbprofitbusinessinfo/info/${this.dataForm.id}`),
              method: 'get',
              params: this.$http.adornParams()
            }).then(({data}) => {
              // console.log(data)
              if (data && data.code === 0) {
                this.dataForm.businessid = data.tbProfitbusinessInfo.businessid
                this.dataForm.businessname = data.tbProfitbusinessInfo.businessname
                this.form.push({bid: this.dataForm.businessid, bname: this.dataForm.businessname})
                this.dataForm.businessdescribe = data.tbProfitbusinessInfo.businessdescribe
                this.dataForm.businessOperator = data.tbProfitbusinessInfo.businessOperator
                this.dataForm.businessoperatorname = data.tbProfitbusinessInfo.businessoperatorname
                this.dataForm.businesstype = data.tbProfitbusinessInfo.businesstype
                this.dataForm.businessstate = data.tbProfitbusinessInfo.businessstate
                this.dataForm.gmtCreate = data.tbProfitbusinessInfo.gmtCreate
                this.dataForm.gmtModified = data.tbProfitbusinessInfo.gmtModified
                this.dataForm.isState = data.tbProfitbusinessInfo.isState
                this.dataForm.isDelete = data.tbProfitbusinessInfo.isDelete
              }
            })
          }
        })
      },
      // 表单提交
      dataFormSubmit () {
        this.visible = false
        this.$emit('refreshDataList')
      }
    }
  }
</script>
